.. MAGEMin documentation

External libraries		  
==================

The installation details for Mas OS X use ``Homebrew``. However, the libraries can also be installed using ``MacPorts``.

**1. C and fortran compilers**

Using either ``gcc`` or ``clang`` to compile MAGEMin is up to you as the runtime performances are similar. However, in the event you want to modify MAGEMin for your own use, I would advice that you compile MAGEMin with ``clang`` as the error handling system is more strict which will save you from having unexpected segfaults errors...

.. code-block:: shell

	brew install llvm
	brew install gcc

Note that the ``gcc`` package comes with ``gcc``, ``g++`` and ``gfortran``

**2. MPICH** (Message Passing Interface)

.. code-block:: shell

	brew install mpich

Note that ``open-mpi`` can equally be used.

**3. lapacke** (``C`` version of the fotran ``lapack`` library, should now be included in the ``lapack`` libraries)

.. code-block:: shell

	brew install lapack
	
If the ``lapacke`` libraries are not included you can download the ``lapack`` package from netlib that includes it.

**4. NLopt** (Non Linear optimization library)

``NLopt`` can be installed using

.. code-block:: shell

	brew install nlopt


MAGEMin
=======
	
Choose the ``C`` compiler in the first line of the Makefile by commenting out one

.. code-block:: shell

	#CC=gcc
	CC=clang

Make sure the ``MPICH`` paths for libraries and include directory in Makefile are correct for instance:

.. code-block:: shell

	LIBS   += (...) -I/.../mpich/lib/libmpich.dylib
	INC     = (...) -I/.../mpich/include

Do the same for ``lapacke``:

.. code-block:: shell

	LIBS   += (...) /.../liblapacke.dylib
	
And ``NLopt``:

.. code-block:: shell

	LIBS   += (...) /.../libnlopt.dylib
	
Then compile MAGEMin:

.. code-block:: shell
	
	make clean; make all;

Note that by default the optimization flag ``-O3`` and debugging flag ``-g`` are used.
